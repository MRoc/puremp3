<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:help="clr-namespace:CoreControls.Help;assembly=CoreControls"
    xmlns:System="clr-namespace:System;assembly=mscorlib">

    <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter" />

    <!-- Corners =========================================================================== -->
    <System:Double x:Key="radiusXSmall">5</System:Double>
    <System:Double x:Key="radiusYSmall">5</System:Double>
    <System:Double x:Key="radiusXBig">10</System:Double>
    <System:Double x:Key="radiusYBig">10</System:Double>
    <CornerRadius x:Key="borderCornerRadiusSmall">5</CornerRadius>
    <CornerRadius x:Key="borderCornerRadiusBig">10</CornerRadius>

    <!-- Colors ============================================================================ -->
    <Color x:Key="colorTransparent">Transparent</Color>
    <Color x:Key="colorBackgroundSelection">#ff949DA8</Color>
    <Color x:Key="colorBackground">#FFDADBEA</Color>
    <Color x:Key="colorBackgroundWindow">#FFB2BCC4</Color>
    <Color x:Key="colorControlBorder">#FF717677</Color>
    <Color x:Key="colorControlBackground">WhiteSmoke</Color>
    <Color x:Key="colorControlBackgroundDisabled">#FFC0C3D3</Color>
    <Color x:Key="colorControlText">#FF252728</Color>
    <Color x:Key="colorControlTextSelection">LightGoldenrodYellow</Color>
    <Color x:Key="colorControlTextDisabled">Gray</Color>
    <Color x:Key="colorControlGlass">White</Color>
    <Color x:Key="colorControlGlyph">#FF252728</Color>
    <Color x:Key="colorControlTextBackground">WhiteSmoke</Color>
    <Color x:Key="colorControlTextGlass">White</Color>

    <!-- Brushes =========================================================================== -->
    <SolidColorBrush x:Key="brushBackgroundWindow" Color="{StaticResource colorBackgroundWindow}"/>
    <SolidColorBrush x:Key="brushBackground" Color="{StaticResource colorBackground}"/>
    <SolidColorBrush x:Key="brushBackgroundSelection" Color="{StaticResource colorBackgroundSelection}"/>
    <SolidColorBrush x:Key="controlText" Color="{StaticResource colorControlText}"/>
    <SolidColorBrush x:Key="controlTextSelection" Color="{StaticResource colorControlTextSelection}"/>
    <SolidColorBrush x:Key="controlTextDisabled" Color="{StaticResource colorControlTextDisabled}"/>
    <SolidColorBrush x:Key="controlBorder" Color="{StaticResource colorControlBorder}" />
    <SolidColorBrush x:Key="controlGlass" Color="{StaticResource colorControlGlass}" />
    <SolidColorBrush x:Key="controlGlyph" Color="{StaticResource colorControlGlyph}" />
    <SolidColorBrush x:Key="controlBackground" Color="{StaticResource colorControlBackground}" />
    <SolidColorBrush x:Key="controlBackgroundDisabled" Color="{StaticResource colorControlBackgroundDisabled}" />
    <SolidColorBrush x:Key="controlTextBackground" Color="{StaticResource colorControlTextBackground}" />
    <SolidColorBrush x:Key="controlTextGlass" Color="{StaticResource colorControlTextGlass}" />

    <!-- Amoeba =========================================================================== -->
    <Style x:Key="styleBorderAmoebe">
        <Setter Property="Border.BorderBrush" Value="{StaticResource brushBackground}" />
        <Setter Property="Border.Background" Value="{StaticResource brushBackground}" />
        <Setter Property="Border.BorderThickness" Value="5" />
        <Setter Property="Border.CornerRadius" Value="{StaticResource borderCornerRadiusSmall}" />
        <Setter Property="Border.Margin" Value="0" />
    </Style>

    <!-- Button =========================================================================== -->
    <ControlTemplate TargetType="{x:Type ButtonBase}" x:Key="templateButton">
        <Grid>
            <Rectangle x:Name="innerRectangle" 
                        HorizontalAlignment="Stretch" 
                        VerticalAlignment="Stretch"
                        Stroke="{StaticResource controlBorder}" 
                        StrokeThickness="1" 
                        Fill="{StaticResource controlBackground}"
                        RadiusX="{StaticResource radiusXSmall}" RadiusY="{StaticResource radiusYSmall}" />
            <Rectangle x:Name="glassCube"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        StrokeThickness="1"
                        RadiusX="{StaticResource radiusXSmall}" RadiusY="{StaticResource radiusYSmall}" 
                        Fill="{StaticResource controlGlass}"
                        Opacity="0" />
            <ContentPresenter
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Content="{TemplateBinding Content}" 
                        Margin="2"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Rectangle.Fill" TargetName="innerRectangle"
                            Value="{StaticResource controlBorder}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="Rectangle.StrokeThickness" TargetName="innerRectangle"
                            Value="2" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Rectangle.Stroke" TargetName="innerRectangle"
                            Value="{StaticResource controlBackgroundDisabled}" />
                <Setter Property="Rectangle.Fill" TargetName="innerRectangle"
                            Value="{StaticResource controlBackgroundDisabled}" />
                <Setter Property="Foreground"
                            Value="{StaticResource controlTextDisabled}" />
            </Trigger>
            <EventTrigger RoutedEvent="Mouse.MouseEnter">
                <EventTrigger.Actions>
                    <BeginStoryboard Name="mouseEnterBeginStoryboard">
                        <Storyboard>
                            <DoubleAnimation
                                        Storyboard.TargetName="glassCube" 
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.5" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
            <EventTrigger RoutedEvent="Mouse.MouseLeave">
                <EventTrigger.Actions>
                    <StopStoryboard BeginStoryboardName="mouseEnterBeginStoryboard" />
                    <BeginStoryboard Name="mouseExitBeginStoryboard">
                        <Storyboard>
                            <DoubleAnimation
                                        Storyboard.TargetName="glassCube" 
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.0" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="{x:Type Button}">
        <Setter Property="Button.Template" Value="{StaticResource templateButton}" />
        <Setter Property="Foreground" Value="{StaticResource controlText}" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="MinHeight" Value="22" />
        <Setter Property="MaxHeight" Value="22" />
    </Style>

    <!-- CheckBox =========================================================================== -->
    <Style x:Key="{x:Type CheckBox}" TargetType="CheckBox">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid Width="15" Height="15">
                                <Rectangle x:Name="innerRectangle" 
                                    HorizontalAlignment="Stretch" 
                                    VerticalAlignment="Stretch"
                                    Stroke="{StaticResource controlBorder}" 
                                    StrokeThickness="1" 
                                    Fill="{StaticResource controlBackground}"
                                    RadiusX="{StaticResource radiusXSmall}" RadiusY="{StaticResource radiusYSmall}" />
                                <Rectangle x:Name="glassCube"
                                    HorizontalAlignment="Stretch"
                                    VerticalAlignment="Stretch"
                                    StrokeThickness="1"
                                    RadiusX="{StaticResource radiusXSmall}" RadiusY="{StaticResource radiusYSmall}" 
                                    Fill="{StaticResource controlGlass}"
                                    Opacity="0" />
                                <Path 
                                    Width="7" Height="7" 
                                    x:Name="CheckMark"
                                    SnapsToDevicePixels="False" 
                                    Stroke="{StaticResource controlGlyph}"
                                    StrokeThickness="2"
                                    Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="4,0,0,0"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"
                            RecognizesAccessKey="True"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" TargetName="innerRectangle"
                                Value="{StaticResource controlBorder}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="innerRectangle" Property="Fill" Value="{StaticResource controlBackgroundDisabled}" />
                            <Setter TargetName="innerRectangle" Property="Stroke" Value="{StaticResource controlBackgroundDisabled}" />
                            <Setter Property="Foreground" Value="{StaticResource controlTextDisabled}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="glassCube" 
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.5" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="glassCube" 
                                            Storyboard.TargetProperty="Opacity"
                                            To="0.0" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TextBox =========================================================================== -->
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="IsUndoEnabled" Value="False" />
        <Setter Property="UndoLimit" Value="0" />
        <Setter Property="MinHeight" Value="22" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="Background" Value="{StaticResource controlTextBackground}" />
        <Setter Property="Foreground" Value="{StaticResource controlText}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Grid>
                        <Rectangle  x:Name="innerRectangle" 
                                        HorizontalAlignment="Stretch" 
                                        VerticalAlignment="Stretch"
                                        Stroke="{StaticResource controlTextBackground}" 
                                        StrokeThickness="1" 
                                        Fill="{TemplateBinding Background}"
                                        RadiusX="{StaticResource radiusXSmall}" RadiusY="{StaticResource radiusYSmall}" />
                        <Rectangle  x:Name="glassCube"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Stretch"
                                        StrokeThickness="1"
                                        RadiusX="{StaticResource radiusXSmall}" RadiusY="{StaticResource radiusYSmall}" 
                                        Fill="{StaticResource controlTextGlass}"
                                        Opacity="0" />
                        <Border 
                                        Name="Border"
                                        CornerRadius="{StaticResource borderCornerRadiusSmall}" 
                                        Padding="2"
                                        Background="Transparent"
                                        BorderBrush="Transparent"
                                        BorderThickness="1" 
                                        Grid.Column="0"
                                        Grid.Row="0" >
                            <ScrollViewer Margin="0" x:Name="PART_ContentHost"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource controlBackgroundDisabled}"/>
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource controlBackgroundDisabled}"/>
                            <Setter Property="Foreground" Value="{StaticResource controlTextDisabled}"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="innerRectangle" Property="Stroke" Value="{StaticResource controlBorder}"/>
                        </Trigger>
                        <EventTrigger RoutedEvent="Mouse.MouseEnter">
                            <EventTrigger.Actions>
                                <BeginStoryboard Name="mouseEnterBeginStoryboard">
                                    <Storyboard>
                                        <DoubleAnimation
                                                Storyboard.TargetName="glassCube" 
                                                Storyboard.TargetProperty="Opacity"
                                                To="0.2" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Mouse.MouseLeave">
                            <EventTrigger.Actions>
                                <StopStoryboard BeginStoryboardName="mouseEnterBeginStoryboard" />
                                <BeginStoryboard Name="mouseExitBeginStoryboard">
                                    <Storyboard>
                                        <DoubleAnimation
                                        Storyboard.TargetName="glassCube" 
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.0" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Loaded"></EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu>
                    <MenuItem Command="ApplicationCommands.Copy" />
                    <MenuItem Command="ApplicationCommands.Cut" />
                    <MenuItem Command="ApplicationCommands.Paste" />
                </ContextMenu>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ListView =========================================================================== -->
    <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Grid>
                        <Rectangle          x:Name="innerRectangle"
                                            Fill="Transparent"
                                            Stroke="Transparent"
                                            StrokeThickness="1"
                                            RadiusX="{StaticResource radiusXSmall}" RadiusY="{StaticResource radiusYSmall}"
                                            Grid.Column="0"
                                            Grid.Row="0" />
                        <Rectangle          x:Name="glassCube"
                                            StrokeThickness="0"
                                            RadiusX="{StaticResource radiusXSmall}" RadiusY="{StaticResource radiusYSmall}" 
                                            Fill="{StaticResource controlGlass}"
                                            Opacity="0" 
                                            Grid.Column="0"
                                            Grid.Row="0"  />
                        <ContentPresenter   x:Name="content"
                                            Margin="4,0,4,0"
                                            Grid.Column="0"
                                            Grid.Row="0" />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames
                                                Storyboard.TargetName="innerRectangle"
                                                Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource colorTransparent}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="glassCube" Storyboard.TargetProperty="Opacity" To="0.0" Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal_Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames
                                            Storyboard.TargetName="innerRectangle"
                                            Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource colorBackgroundSelection}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="glassCube" Storyboard.TargetProperty="Opacity" To="0.0" Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver_Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames
                                                Storyboard.TargetName="innerRectangle"
                                                Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource colorBackgroundSelection}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="glassCube" Storyboard.TargetProperty="Opacity" To="0.2" Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="glassCube" Storyboard.TargetProperty="Opacity" To="0.2" Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ListView}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <ScrollViewer>
                        <ItemsPresenter />
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ListViewPopupStyle" TargetType="{x:Type ListView}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListView}">
                    <Border 
                        Name="Border"
                        Background="{StaticResource brushBackground}"
                        BorderBrush="{StaticResource controlBorder}"
                        BorderThickness="1">
                        <ScrollViewer CanContentScroll="True" Margin="4,4,4,4" VerticalScrollBarVisibility="Auto">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- TreeView =========================================================================== -->
    <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid Width="15" Height="15" Background="Transparent">
                        <Path
                            x:Name="ExpandPath"
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="2"
                            Fill="{StaticResource controlGlyph}"
                            Data="M 0 2 L 0 3 L 2 3 L 2 5 L 3 5 L 3 3 L 5 3 L 5 2 L 3 2 L 3 0 L 2 0 L 2 2 Z"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Data" TargetName="ExpandPath" Value="M 0 2 L 0 3 L 5 3 L 5 2 Z"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="TreeViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle 
                        StrokeThickness="5"
                        Stroke="Red"
                        StrokeDashArray="1 2"
                        Opacity="0"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type TreeViewItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="HorizontalContentAlignment"
                            Value="{Binding Path=HorizontalContentAlignment,
                            RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="VerticalContentAlignment"
                            Value="{Binding Path=VerticalContentAlignment,
                            RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
        <Setter Property="Padding" Value="1,0,0,0"/>
        <Setter Property="Foreground" Value="{StaticResource controlText}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
        <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TreeViewItem}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition MinWidth="15" Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}"
                                            IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                            ClickMode="Press"/>
                        <Rectangle          x:Name="innerRectangle"
                                            Fill="Transparent"
                                            Stroke="Transparent"
                                            StrokeThickness="1"
                                            RadiusX="{StaticResource radiusXSmall}" RadiusY="{StaticResource radiusYSmall}"
                                            Grid.Column="1"
                                            Grid.Row="0" />
                        <Rectangle          x:Name="GlassCube"
                                            StrokeThickness="1"
                                            RadiusX="{StaticResource radiusXSmall}" RadiusY="{StaticResource radiusYSmall}" 
                                            Fill="{StaticResource controlGlass}"
                                            Opacity="0" 
                                            Grid.Column="1"
                                            Grid.Row="0"  />
                        <Border             Grid.Column="1"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Padding="{TemplateBinding Padding}"
                                            CornerRadius="{StaticResource borderCornerRadiusSmall}">
                            <ContentPresenter x:Name="PART_Header"
                                                Margin="2, 0, 2, 0"
                                                ContentSource="Header"
                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                            <Border.Triggers>
                                <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard Name="mouseEnterBeginStoryboard">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="GlassCube" Storyboard.TargetProperty="Opacity" To="0.2" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="Mouse.MouseLeave">
                                    <EventTrigger.Actions>
                                        <StopStoryboard BeginStoryboardName="mouseEnterBeginStoryboard" />
                                        <BeginStoryboard Name="mouseExitBeginStoryboard">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetName="GlassCube" Storyboard.TargetProperty="Opacity"  To="0.0" Duration="0:0:0.2" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                            </Border.Triggers>
                        </Border>
                        <ItemsPresenter x:Name="ItemsHost"
                                                Grid.Row="1"
                                                Grid.Column="1"
                                                Grid.ColumnSpan="2"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="innerRectangle" Property="Fill" Value="{StaticResource brushBackgroundSelection}"/>
                            <Setter TargetName="innerRectangle" Property="Stroke" Value="{StaticResource controlBorder}"/>
                            <Setter Property="Foreground" Value="{StaticResource controlTextSelection}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="innerRectangle" Property="Fill" Value="{StaticResource brushBackgroundSelection}"/>
                            <Setter TargetName="innerRectangle" Property="Stroke" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{StaticResource controlTextSelection}"/>
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource controlTextDisabled}"/>
                        </Trigger>
                        <Trigger Property="IsExpanded" Value="false">
                            <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Width" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasHeader" Value="false"/>
                                <Condition Property="Height" Value="Auto"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ComboBox ==================================================================== -->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Rectangle  x:Name="innerRectangle" 
                            HorizontalAlignment="Stretch" 
                            VerticalAlignment="Stretch"
                            Grid.Column="0" 
                            Grid.ColumnSpan="2" 
                            Stroke="{StaticResource controlBorder}" 
                            StrokeThickness="1" 
                            Fill="{StaticResource controlBackground}"
                            RadiusX="{StaticResource radiusXSmall}" RadiusY="{StaticResource radiusYSmall}" />
            <Rectangle  x:Name="glassCube"
                            Grid.Column="0" 
                            Grid.ColumnSpan="2" 
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            StrokeThickness="0"
                            RadiusX="{StaticResource radiusXSmall}" RadiusY="{StaticResource radiusYSmall}" 
                            Fill="{StaticResource controlGlass}"
                            Opacity="0" />
            <Path       x:Name="Arrow"
                            Grid.Column="1"     
                            Fill="{StaticResource controlGlyph}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsFocused" Value="true">
                <Setter Property="Rectangle.StrokeThickness" TargetName="innerRectangle" Value="1" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="innerRectangle" Property="Fill" Value="{StaticResource controlBackgroundDisabled}" />
                <Setter TargetName="innerRectangle" Property="Stroke" Value="{StaticResource controlBackgroundDisabled}" />
                <Setter Property="Foreground" Value="{StaticResource controlTextDisabled}"/>
                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource controlTextDisabled}" />
            </Trigger>
            <EventTrigger RoutedEvent="Mouse.MouseEnter">
                <EventTrigger.Actions>
                    <BeginStoryboard Name="mouseEnterBeginStoryboard">
                        <Storyboard>
                            <DoubleAnimation
                                        Storyboard.TargetName="glassCube" 
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.5" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
            <EventTrigger RoutedEvent="Mouse.MouseLeave">
                <EventTrigger.Actions>
                    <StopStoryboard BeginStoryboardName="mouseEnterBeginStoryboard" />
                    <BeginStoryboard Name="mouseExitBeginStoryboard">
                        <Storyboard>
                            <DoubleAnimation
                                        Storyboard.TargetName="glassCube" 
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.0" Duration="0:0:0.2" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger.Actions>
            </EventTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border
            x:Name="PART_ContentHost"
            Focusable="False"
            Background="{TemplateBinding Background}" />
    </ControlTemplate>
    <Style TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="40"/>
        <Setter Property="MinHeight" Value="22" />
        <Setter Property="MaxHeight" Value="22" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton 
                                Name="ToggleButton" 
                                Template="{StaticResource ComboBoxToggleButton}" 
                                Focusable="false"
                                Background="Green"
                                IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter
                                Margin="5,0,0,0"
                                Name="ContentSite"
                                IsHitTestVisible="False" 
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                                Style="{x:Null}" 
                                Template="{StaticResource ComboBoxTextBox}" 
                                HorizontalAlignment="Left" 
                                VerticalAlignment="Center" 
                                Focusable="True" 
                                Background="Transparent"
                                Visibility="Hidden"
                                IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup 
                                Name="Popup"
                                Placement="Bottom"
                                IsOpen="{TemplateBinding IsDropDownOpen}"
                                AllowsTransparency="True" 
                                Focusable="False"
                                PopupAnimation="Slide"
                                >
                            <Grid 
                                    Name="DropDown"
                                    SnapsToDevicePixels="True"
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                        x:Name="DropDownBorder"
                                        Background="{StaticResource brushBackground}"
                                        BorderThickness="1"
                                        BorderBrush="{StaticResource controlBorder}"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource controlTextDisabled}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="true">
                            <Setter Property="Foreground" Value="{StaticResource controlText}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="{StaticResource borderCornerRadiusSmall}"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable" Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>
    <Style x:Key="{x:Type ComboBoxItem}" TargetType="ComboBoxItem">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid>
                        <Grid Grid.Column="0" Grid.Row="0">
                            <Rectangle          x:Name="innerRectangle"
                                                Fill="Transparent"
                                                Stroke="Transparent"
                                                StrokeThickness="1"
                                                RadiusX="{StaticResource radiusXSmall}" RadiusY="{StaticResource radiusYSmall}"
                                                Grid.Column="0"
                                                Grid.Row="0" />
                            <Rectangle          x:Name="glassCube"
                                                StrokeThickness="1"
                                                RadiusX="{StaticResource radiusXSmall}" RadiusY="{StaticResource radiusYSmall}" 
                                                Fill="{StaticResource controlGlass}"
                                                Opacity="0" 
                                                Grid.Column="0"
                                                Grid.Row="0"  />
                        </Grid>
                        <ContentPresenter   x:Name="content"
                                            Margin="4,0,4,0"
                                            Grid.Column="0"
                                            Grid.Row="0" />
                        <Grid.Triggers>
                            <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                <EventTrigger.Actions>
                                    <BeginStoryboard Name="mouseEnterBeginStoryboard">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="glassCube" Storyboard.TargetProperty="Opacity" To="0.2" Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave">
                                <EventTrigger.Actions>
                                    <StopStoryboard BeginStoryboardName="mouseEnterBeginStoryboard" />
                                    <BeginStoryboard Name="mouseExitBeginStoryboard">
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="glassCube" Storyboard.TargetProperty="Opacity"  To="0.0" Duration="0:0:0.2" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                        </Grid.Triggers>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter TargetName="innerRectangle" Property="Fill" Value="{StaticResource brushBackgroundSelection}"/>
                            <Setter Property="Foreground" Value="{StaticResource controlTextSelection}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter TargetName="innerRectangle" Property="Stroke" Value="{StaticResource controlBorder}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource controlTextDisabled}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ContextMenu ==================================================================== -->
    <MenuScrollingVisibilityConverter x:Key="MenuScrollingVisibilityConverter"/>
    <Geometry x:Key="DownArrow">M 0,0 L 3.5,4 L 7,0 Z</Geometry>
    <Geometry x:Key="UpArrow">M 0,4 L 3.5,0 L 7,4 Z</Geometry>
    <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
    <Style x:Key="MenuScrollButton" TargetType="{x:Type RepeatButton}" BasedOn="{x:Null}">
        <Setter Property="ClickMode" Value="Hover"/>
        <Setter Property="MinWidth" Value="0"/>
        <Setter Property="MinHeight" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border x:Name="bd" Background="Transparent">
                        <ContentPresenter x:Name="ContentContainer"
                              Margin="2,2,2,2"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="bd" Property="Background" Value="{StaticResource controlBorder}"/>
                            <Setter TargetName="ContentContainer" Property="Margin" Value="3,3,1,1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="MenuScrollViewer" TargetType="{x:Type ScrollViewer}" BasedOn="{x:Null}">
        <Setter Property="HorizontalScrollBarVisibility" Value="Hidden"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1" Grid.Column="0">
                            <ScrollContentPresenter Margin="{TemplateBinding Padding}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- SimpleStyles: MenuItem -->
    <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
        <Setter Property="Height" Value="1"/>
        <Setter Property="Margin" Value="0,4,0,4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Separator}">
                    <Border BorderBrush="{StaticResource controlBorder}" BorderThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- TopLevelHeader -->
    <ControlTemplate x:Key="TopLevelHeaderTemplateKey" TargetType="{x:Type MenuItem}">
        <Border Name="Border" >
            <Grid>
                <ContentPresenter 
                      Margin="6,3,6,3" 
                      ContentSource="Header"
                      RecognizesAccessKey="True" />
                <Popup 
                      Name="Popup"
                      Placement="Bottom"
                      IsOpen="{TemplateBinding IsSubmenuOpen}"
                      AllowsTransparency="True" 
                      Focusable="False"
                      PopupAnimation="Fade">
                    <Border 
                        Name="SubmenuBorder"
                        SnapsToDevicePixels="True"
                        Background="{StaticResource brushBackground}"
                        BorderBrush="Transparent"
                        BorderThickness="1" >
                        <ScrollViewer CanContentScroll="True" Style="{StaticResource MenuScrollViewer}">
                            <StackPanel   
                                  IsItemsHost="True" 
                                  KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource controlBorder}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="0,0,4,4"/>
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,3"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource controlTextDisabled}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!-- TopLevelItem -->
    <ControlTemplate x:Key="TopLevelItemTemplateKey" TargetType="{x:Type MenuItem}">
        <Border Name="Border" >
            <Grid>
                <ContentPresenter 
                    ContentSource="Header"
                    RecognizesAccessKey="True" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource controlBorder}"/>
                <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource controlTextDisabled}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!-- SubmenuItem (Normal MenuItem in ContextMenu) -->
    <ControlTemplate 
        x:Key="SubmenuItemTemplateKey" 
        TargetType="{x:Type MenuItem}">
        <Border Name="Border" >
            <Grid Margin="0, 2, 0, 2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                <Rectangle          x:Name="backgroundRect"
                                    Fill="Transparent"
                                    RadiusX="{StaticResource radiusXSmall}" RadiusY="{StaticResource radiusYSmall}"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="4" />
                <Rectangle          x:Name="lineBorder"
                                    Fill="Transparent"
                                    Stroke="Transparent"
                                    StrokeThickness="1"
                                    RadiusX="{StaticResource radiusXSmall}" RadiusY="{StaticResource radiusYSmall}"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="4" />
                <Rectangle          x:Name="glassRect"
                                    StrokeThickness="1"
                                    RadiusX="{StaticResource radiusXSmall}" RadiusY="{StaticResource radiusYSmall}" 
                                    Fill="{StaticResource controlGlass}"
                                    Opacity="0" 
                                    Grid.Column="0"
                                    Grid.ColumnSpan="4" />
                <ContentPresenter 
                                    Name="Icon"
                                    Margin="6,0,6,0"
                                    VerticalAlignment="Center"
                                    ContentSource="Icon" />
                <Border 
                                    Name="Check"  
                                    Width="13" Height="13" 
                                    Visibility="Collapsed"
                                    Margin="6,0,6,0" 
                                    Background="{StaticResource controlBorder}"
                                    BorderThickness="1"
                                    BorderBrush="{StaticResource controlBorder}">
                    <Path 
                                        Name="CheckMark"
                                        Width="7" Height="7" 
                                        Visibility="Hidden" 
                                        SnapsToDevicePixels="False" 
                                        Stroke="{StaticResource controlGlyph}"
                                        StrokeThickness="2"
                                        Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                </Border>
                <ContentPresenter 
                                    Margin="0, 2, 0, 2"
                                    Name="HeaderHost"
                                    Grid.Column="1"
                                    ContentSource="Header"
                                    RecognizesAccessKey="True" />
                <TextBlock
                                    x:Name="InputGestureText"
                                    Grid.Column="2"
                                    Text="{TemplateBinding InputGestureText}"
                                    DockPanel.Dock="Right" />
                <Grid.Triggers>
                    <EventTrigger RoutedEvent="Mouse.MouseEnter">
                        <EventTrigger.Actions>
                            <BeginStoryboard Name="mouseEnterBeginStoryboard">
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="glassRect" Storyboard.TargetProperty="Opacity" To="0.2" Duration="0:0:0.2" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                    <EventTrigger RoutedEvent="Mouse.MouseLeave">
                        <EventTrigger.Actions>
                            <StopStoryboard BeginStoryboardName="mouseEnterBeginStoryboard" />
                            <BeginStoryboard Name="mouseExitBeginStoryboard">
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetName="glassRect" Storyboard.TargetProperty="Opacity"  To="0.0" Duration="0:0:0.2" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger.Actions>
                    </EventTrigger>
                </Grid.Triggers>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsCheckable" Value="true">
                <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
                <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="lineBorder" Property="Stroke" Value="{StaticResource controlBorder}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource controlTextDisabled}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!-- SubmenuHeader -->
    <ControlTemplate 
        x:Key="SubmenuHeaderTemplateKey" 
        TargetType="{x:Type MenuItem}">
        <Border Name="Border" >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Icon"/>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                    <ColumnDefinition Width="13"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter 
                    Name="Icon"
                    Margin="6,0,6,0"
                    VerticalAlignment="Center"
                    ContentSource="Icon"/>
                <ContentPresenter 
                    Name="HeaderHost"
                    Grid.Column="1"
                    ContentSource="Header"
                    RecognizesAccessKey="True" />
                <TextBlock x:Name="InputGestureText"
                    Grid.Column="2"
                    Text="{TemplateBinding InputGestureText}"
                    Margin="5,0,0,0"
                    DockPanel.Dock="Right"/>
                <Path 
                    Grid.Column="3"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M 0 0 L 0 7 L 4 3.5 Z" 
                    Fill="{StaticResource controlGlyph}" />
                <Popup 
                    Name="Popup"
                    Placement="Right"
                    HorizontalOffset="-4" 
                    IsOpen="{TemplateBinding IsSubmenuOpen}"
                    AllowsTransparency="True" 
                    Focusable="False"
                    PopupAnimation="Fade">
                    <Border 
                        Name="SubmenuBorder"
                        SnapsToDevicePixels="True"
                        Background="{StaticResource brushBackground}"
                        BorderBrush="{StaticResource controlBorder}"
                        BorderThickness="1" >
                        <ScrollViewer CanContentScroll="True" Style="{StaticResource MenuScrollViewer}">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Border" Property="Background" Value="{StaticResource controlBackground}"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="True">
                <Setter TargetName="SubmenuBorder" Property="CornerRadius" Value="{StaticResource borderCornerRadiusSmall}"/>
                <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,3,0,3"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource controlTextDisabled}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!-- MenuItem Style -->
    <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Style.Triggers>
            <Trigger Property="Role" Value="TopLevelHeader">
                <Setter Property="Template" Value="{StaticResource TopLevelHeaderTemplateKey}"/>
                <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
            </Trigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Template" Value="{StaticResource TopLevelItemTemplateKey}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Template" Value="{StaticResource SubmenuHeaderTemplateKey}"/>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Template" Value="{StaticResource SubmenuItemTemplateKey}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!-- ContextMenu -->
    <Style TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
        <Setter Property="HasDropShadow" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource controlText}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <help:HelpBorder
                            Name="Border"
                            Background="{StaticResource brushBackground}"
                            BorderBrush="{StaticResource controlBorder}"
                            BorderThickness="1">
                        <ScrollViewer CanContentScroll="True" Style="{StaticResource MenuScrollViewer}" Margin="4,6,4,6">
                            <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
                        </ScrollViewer>
                    </help:HelpBorder>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasDropShadow" Value="true">
                            <Setter TargetName="Border" Property="CornerRadius" Value="{StaticResource borderCornerRadiusSmall}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Scrollbar ==================================================================== -->
    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Grid>
                        <Rectangle x:Name="innerRectangle" 
                            HorizontalAlignment="Stretch" 
                            VerticalAlignment="Stretch"
                            Stroke="{StaticResource controlBorder}" 
                            StrokeThickness="1" 
                            Fill="{StaticResource controlBackground}"
                            RadiusX="{StaticResource radiusXSmall}" RadiusY="{StaticResource radiusYSmall}" />
                        <Rectangle x:Name="glassCube"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            StrokeThickness="1"
                            RadiusX="{StaticResource radiusXSmall}" RadiusY="{StaticResource radiusYSmall}" 
                            Fill="{StaticResource controlGlass}"
                            Opacity="0" />
                        <Path 
					            HorizontalAlignment="Center"
					            VerticalAlignment="Center"
					            Fill="{StaticResource controlGlyph}"
					            Data="{Binding Path=Content,RelativeSource={RelativeSource TemplatedParent}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Rectangle.Fill" TargetName="innerRectangle"
                            Value="{StaticResource controlBorder}" />
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Rectangle.StrokeThickness" TargetName="innerRectangle"
                            Value="2" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Rectangle.Stroke" TargetName="innerRectangle"
                            Value="{StaticResource controlBackgroundDisabled}" />
                            <Setter Property="Rectangle.Fill" TargetName="innerRectangle"
                            Value="{StaticResource controlBackgroundDisabled}" />
                        </Trigger>
                        <EventTrigger RoutedEvent="Mouse.MouseEnter">
                            <EventTrigger.Actions>
                                <BeginStoryboard Name="mouseEnterBeginStoryboard">
                                    <Storyboard>
                                        <DoubleAnimation
                                        Storyboard.TargetName="glassCube" 
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.5" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Mouse.MouseLeave">
                            <EventTrigger.Actions>
                                <StopStoryboard BeginStoryboardName="mouseEnterBeginStoryboard" />
                                <BeginStoryboard Name="mouseExitBeginStoryboard">
                                    <Storyboard>
                                        <DoubleAnimation
                                        Storyboard.TargetName="glassCube" 
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.0" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Rectangle x:Name="innerRectangle" 
                            HorizontalAlignment="Stretch" 
                            VerticalAlignment="Stretch"
                            Stroke="{StaticResource controlBorder}" 
                            StrokeThickness="1" 
                            Fill="{StaticResource controlBackground}"
                            RadiusX="{StaticResource radiusXSmall}" RadiusY="{StaticResource radiusYSmall}" />
                        <Rectangle x:Name="glassCube"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            StrokeThickness="1"
                            RadiusX="{StaticResource radiusXSmall}" RadiusY="{StaticResource radiusYSmall}" 
                            Fill="{StaticResource controlGlass}"
                            Opacity="0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Rectangle.Stroke" TargetName="innerRectangle"
                            Value="{StaticResource controlBackgroundDisabled}" />
                            <Setter Property="Rectangle.Fill" TargetName="innerRectangle"
                            Value="{StaticResource controlBackgroundDisabled}" />
                        </Trigger>
                        <EventTrigger RoutedEvent="Mouse.MouseEnter">
                            <EventTrigger.Actions>
                                <BeginStoryboard Name="mouseEnterBeginStoryboard">
                                    <Storyboard>
                                        <DoubleAnimation
                                        Storyboard.TargetName="glassCube" 
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.5" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Mouse.MouseLeave">
                            <EventTrigger.Actions>
                                <StopStoryboard BeginStoryboardName="mouseEnterBeginStoryboard" />
                                <BeginStoryboard Name="mouseExitBeginStoryboard">
                                    <Storyboard>
                                        <DoubleAnimation
                                        Storyboard.TargetName="glassCube" 
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.0" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="0.00001*"/>
            </Grid.RowDefinitions>
            <Border
			    CornerRadius="{StaticResource borderCornerRadiusSmall}" 
			    Background="{StaticResource brushBackgroundWindow}" />
            <Track 
			    Name="PART_Track"
			    IsDirectionReversed="true">
                <Track.DecreaseRepeatButton>
                    <RepeatButton 
					    Style="{StaticResource ScrollBarPageButton}"
					    Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb 
					    Style="{StaticResource ScrollBarThumb}"
					    Background="{StaticResource brushBackground}"
					    BorderBrush="{StaticResource brushBackgroundSelection}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton 
					    Style="{StaticResource ScrollBarPageButton}"
					    Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="0.00001*"/>
            </Grid.ColumnDefinitions>
            <Border
			    CornerRadius="{StaticResource borderCornerRadiusSmall}" 
			    Background="{StaticResource brushBackgroundWindow}" />
            <Track 
			    Name="PART_Track"
			    IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton 
					    Style="{StaticResource ScrollBarPageButton}"
					    Command="ScrollBar.PageLeftCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb 
					    Style="{StaticResource ScrollBarThumb}" 
					    Background="{StaticResource controlBackground}"
					    BorderBrush="{StaticResource controlBorder}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton 
					    Style="{StaticResource ScrollBarPageButton}"
					    Command="ScrollBar.PageRightCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
    </ControlTemplate>
    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Margin" Value="1"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="12" />
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="12"/>
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--TabControl ==================================================================== -->
    <Style  TargetType="{x:Type TabControl}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TabPanel
                            Margin="10,0,0,0"
                            Name="HeaderPanel"
                            Grid.Row="0"
                            Panel.ZIndex="1"
                            IsItemsHost="True"
                            KeyboardNavigation.TabIndex="1"
                            Background="Transparent" />
                        <Border 
                            Name="Border" 
                            Grid.Row="1" 
                            Style="{StaticResource styleBorderAmoebe}"
                            KeyboardNavigation.TabNavigation="Local"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2" >
                            <ContentPresenter 
                                Margin="1"
                                Name="PART_SelectedContentHost"
                                ContentSource="SelectedContent" />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TabItem ==================================================================== -->
    <Style TargetType="{x:Type TabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border 
                            Name="Border"
                            Margin="1,0,1,0" 
                            Background="{StaticResource controlBackground}"
                            BorderBrush="{StaticResource controlBackground}" 
                            BorderThickness="0" 
                            CornerRadius="5,5,0,0" >
                            <ContentPresenter x:Name="ContentSite"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                ContentSource="Header"
                                Margin="12,2,12,2"
                                RecognizesAccessKey="True"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource brushBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource controlBackgroundDisabled}" />
                            <Setter Property="Foreground" Value="{StaticResource controlTextDisabled}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource controlText}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Expander ===================================================================== -->
    <ControlTemplate x:Key="ExpanderToggleButton" TargetType="ToggleButton">
        <Border
            Name="Border" 
            Background="Transparent"
            BorderBrush="Transparent"
            BorderThickness="1">
            <Grid>
                <Ellipse
                    Name="ellipseBackground"
                    Height="20"
                    Width="20"
                    StrokeThickness="1"
                    Stroke="{StaticResource controlBorder}" />
                <Path 
                    Name="Arrow"
                    Fill="{StaticResource controlGlyph}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M 0 0 L 4 4 L 8 0 Z" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="ellipseBackground" Property="Fill" Value="{StaticResource controlBackground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="ellipseBackground" Property="Fill" Value="{StaticResource brushBackground}" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="Arrow" Property="Data" Value="M 0 4 L 4 0 L 8 4 Z" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="ellipseBackground" Property="Fill"
                    Value="{StaticResource controlBackgroundDisabled}" />
                <Setter TargetName="ellipseBackground" Property="Stroke"
                    Value="{StaticResource controlBackgroundDisabled}" />
                <Setter Property="Foreground"
                    Value="{StaticResource controlTextDisabled}"/>
                <Setter TargetName="Arrow" Property="Fill"
                    Value="{StaticResource controlTextDisabled}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type Expander}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Border Margin="1" CornerRadius="{StaticResource borderCornerRadiusSmall}" Background="{StaticResource brushBackgroundWindow}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Name="ContentRow" Height="0"/>
                            </Grid.RowDefinitions>
                            <Border Name="Border" Grid.Row="0">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton
                                        Margin="2"
                                        IsChecked="{Binding Path=IsExpanded,Mode=TwoWay,
                                        RelativeSource={RelativeSource TemplatedParent}}"
                                        Template="{StaticResource ExpanderToggleButton}" 
                                        Background="{StaticResource controlBackground}" />
                                    <ContentPresenter 
                                        Grid.Column="1"
                                        Margin="1"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Stretch" 
                                        ContentSource="Header" 
                                        RecognizesAccessKey="True" />
                                </Grid>
                            </Border>
                            <Border
                                Name="Content"
                                Grid.Row="1"
                                Margin="2,0,2,2"
                                Visibility="Collapsed"
                                CornerRadius="{StaticResource borderCornerRadiusSmall}"
                                Background="{StaticResource brushBackground}">
                                <ContentPresenter Margin="1" />
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ContentRow" Property="Height" Value="{Binding ElementName=Content,Path=DesiredHeight}" />
                            <Setter TargetName="Content" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource controlBackgroundDisabled}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource controlBackgroundDisabled}" />
                            <Setter Property="Foreground" Value="{StaticResource controlTextDisabled}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource controlText}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Slider ===================================================================== -->
    <Style x:Key="SliderButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Height" Value="14"/>
        <Setter Property="Width" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Ellipse x:Name="inner" 
                            HorizontalAlignment="Stretch" 
                            VerticalAlignment="Stretch"
                            Stroke="{StaticResource controlBorder}" 
                            StrokeThickness="1" 
                            Fill="{StaticResource controlBackground}" />
                        <Ellipse x:Name="glassCube"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            StrokeThickness="1"
                            Fill="{StaticResource controlGlass}"
                            Opacity="0" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="inner" Property="Fill" Value="{StaticResource controlBackgroundDisabled}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="true">
                            <Setter Property="Ellipse.StrokeThickness" TargetName="inner" Value="2" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Ellipse.Stroke" TargetName="inner" Value="{StaticResource controlBackgroundDisabled}" />
                            <Setter Property="Ellipse.Fill" TargetName="inner" Value="{StaticResource controlBackgroundDisabled}" />
                        </Trigger>
                        <EventTrigger RoutedEvent="Mouse.MouseEnter">
                            <EventTrigger.Actions>
                                <BeginStoryboard Name="mouseEnterBeginStoryboard">
                                    <Storyboard>
                                        <DoubleAnimation
                                        Storyboard.TargetName="glassCube" 
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.5" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="Mouse.MouseLeave">
                            <EventTrigger.Actions>
                                <StopStoryboard BeginStoryboardName="mouseEnterBeginStoryboard" />
                                <BeginStoryboard Name="mouseExitBeginStoryboard">
                                    <Storyboard>
                                        <DoubleAnimation
                                        Storyboard.TargetName="glassCube" 
                                        Storyboard.TargetProperty="Opacity"
                                        To="0.0" Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger.Actions>
                        </EventTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="HorizontalSlider" TargetType="{x:Type Slider}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding Slider.MinHeight}"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TickBar 
                Name="TopTick"
                SnapsToDevicePixels="True" 
                Placement="Top"
                Fill="{StaticResource controlGlyph}"
                Height="4"
                Visibility="Collapsed" />
            <Border 
                Name="TrackBackground"
                Margin="0"
                CornerRadius="{StaticResource borderCornerRadiusSmall}" 
                Height="4"
                Grid.Row="1"
                Background="{StaticResource controlBackground}" 
                BorderBrush="{StaticResource controlBorder}"
                BorderThickness="1" />
            <Track Grid.Row="1" Name="PART_Track">
                <Track.DecreaseRepeatButton>
                    <RepeatButton 
                        Style="{StaticResource SliderButtonStyle}"
                        Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumbStyle}" />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton 
                        Style="{StaticResource SliderButtonStyle}"
                        Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>
            <TickBar 
                Name="BottomTick"
                SnapsToDevicePixels="True" 
                Grid.Row="2"
                Fill="{TemplateBinding Foreground}"
                Placement="Bottom"
                Height="4"
                Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible"/>
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" TargetName="TrackBackground" Value="{StaticResource controlBackgroundDisabled}" />
                <Setter Property="BorderBrush" TargetName="TrackBackground" Value="{StaticResource controlBackgroundDisabled}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type Slider}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="MinWidth" Value="21" />
                <Setter Property="MinHeight" Value="21" />
                <Setter Property="Template" Value="{StaticResource HorizontalSlider}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- DataGrid ==================================================================== -->

    <Style x:Key="ColumnHeaderGripperStyle"
       TargetType="{x:Type Thumb}">
        <Setter Property="Width" Value="8" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeWE" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                    <Grid Margin="0,0,2,0">
                        <Rectangle x:Name="innerRectangle" 
                            HorizontalAlignment="Stretch" 
                            VerticalAlignment="Stretch"
                            Stroke="{StaticResource controlBorder}" 
                            StrokeThickness="1" 
                            Fill="{StaticResource controlBackground}"
                            RadiusX="{StaticResource radiusXSmall}" RadiusY="{StaticResource radiusYSmall}" />
                        <Rectangle x:Name="glassCube"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            StrokeThickness="1"
                            RadiusX="{StaticResource radiusXSmall}" RadiusY="{StaticResource radiusYSmall}" 
                            Fill="{StaticResource controlGlass}"
                            Opacity="0" />
                        <ContentPresenter
                            Margin="5,1,5,1"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        <Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle}" />
                            
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames
                                            Storyboard.TargetName="innerRectangle"
                                            Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource colorControlBackground}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="glassCube" Storyboard.TargetProperty="Opacity" To="0.0" Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames
                                            Storyboard.TargetName="innerRectangle"
                                            Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource colorBackgroundSelection}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="glassCube" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="glassCube" Storyboard.TargetProperty="Opacity" To="0.5" Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGridColumnHeadersPresenter}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeadersPresenter}">
                    <Grid Background="Transparent">
                        <ItemsPresenter />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGridCell}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="{StaticResource controlBackground}" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Grid>
                        <Rectangle      x:Name="innerRectangle"
                                        Fill="Transparent"
                                        Stroke="Transparent"
                                        StrokeThickness="1"
                                        RadiusX="{StaticResource radiusXSmall}" RadiusY="{StaticResource radiusYSmall}"
                                        Grid.Column="0"
                                        Grid.Row="0" />
                        <Rectangle      x:Name="glassCube"
                                        StrokeThickness="1"
                                        RadiusX="{StaticResource radiusXSmall}" RadiusY="{StaticResource radiusYSmall}" 
                                        Fill="{StaticResource controlGlass}"
                                        Opacity="0" 
                                        Grid.Column="0"
                                        Grid.Row="0"  />

                        <DataGridCellsPresenter Grid.Column="1"
                                ItemsPanel="{TemplateBinding ItemsPanel}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames
                                                Storyboard.TargetName="innerRectangle"
                                                Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource colorTransparent}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames
                                                Storyboard.TargetName="innerRectangle"
                                                Storyboard.TargetProperty="Stroke.(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource colorTransparent}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="glassCube" Storyboard.TargetProperty="Opacity" To="0.0" Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal_Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames
                                            Storyboard.TargetName="innerRectangle"
                                            Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource colorBackgroundSelection}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames
                                                Storyboard.TargetName="innerRectangle"
                                                Storyboard.TargetProperty="Stroke.(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource colorControlBorder}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="glassCube" Storyboard.TargetProperty="Opacity" To="0.0" Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver_Selected">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames
                                                Storyboard.TargetName="innerRectangle"
                                                Storyboard.TargetProperty="Fill.(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource colorBackgroundSelection}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames
                                                Storyboard.TargetName="innerRectangle"
                                                Storyboard.TargetProperty="Stroke.(SolidColorBrush.Color)">
                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource colorControlBorder}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimation Storyboard.TargetName="glassCube" Storyboard.TargetProperty="Opacity" To="0.2" Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="glassCube" Storyboard.TargetProperty="Opacity" To="0.2" Duration="0:0:0.2" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="Foreground" Value="{StaticResource controlText}" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="HorizontalGridLinesBrush" Value="Transparent" />
        <Setter Property="VerticalGridLinesBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">

                        <ScrollViewer x:Name="DG_ScrollViewer"
                            Focusable="false"
                            Background="Transparent"
                            SnapsToDevicePixels="True"
                            Padding="{TemplateBinding Padding}">
                            <ScrollViewer.Template>
                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" />
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto" />
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                            Grid.Column="1"
                                            Visibility="{Binding HeadersVisibility, 
                                                ConverterParameter={x:Static DataGridHeadersVisibility.Column}, 
                                                Converter={x:Static DataGrid.HeadersVisibilityConverter}, 
                                                RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />

                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                            Grid.ColumnSpan="2"
                                            Grid.Row="1"
                                            CanContentScroll="{TemplateBinding CanContentScroll}" />

                                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                            Grid.Column="2"
                                            Grid.Row="1"
                                            Orientation="Vertical"
                                            ViewportSize="{TemplateBinding ViewportHeight}"
                                            Maximum="{TemplateBinding ScrollableHeight}"
                                            Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                            Value="{Binding VerticalOffset, Mode=OneWay, 
                                            RelativeSource={RelativeSource TemplatedParent}}"/>

                                        <Grid Grid.Column="1"
                                            Grid.Row="2">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, 
                                                    RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                <ColumnDefinition Width="*" />
                                            </Grid.ColumnDefinitions>

                                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                Grid.Column="1"
                                                Orientation="Horizontal"
                                                ViewportSize="{TemplateBinding ViewportWidth}"
                                                Maximum="{TemplateBinding ScrollableWidth}"
                                                Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                Value="{Binding HorizontalOffset, Mode=OneWay, 
                                                RelativeSource={RelativeSource TemplatedParent}}"/>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </ScrollViewer>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRowHeader}">
                    <Grid>
                        <StackPanel Orientation="Horizontal" Width="10" >
                            <ContentPresenter VerticalAlignment="Center" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            <Control SnapsToDevicePixels="false"
                                Template="{Binding ValidationErrorTemplate, 
                                    RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"
                                Visibility="{Binding (Validation.HasError), 
                                    Converter={StaticResource bool2VisibilityConverter}, 
                                    RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" />
                        </StackPanel>

                        <Thumb x:Name="PART_TopHeaderGripper" VerticalAlignment="Top" />
                        <Thumb x:Name="PART_BottomHeaderGripper" VerticalAlignment="Bottom" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
